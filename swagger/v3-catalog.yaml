swagger: "2.0"
info:
  title: BigCommerce API
  version: 3.0.0b
  description: A Swagger Document for the BigCommmerce API V3.
  termsOfService: "http://www.bigcommerce.com/terms"
host: "api.bigcommerce.com"
basePath: "/stores/{{store_id}}/v3"
tags:
  - name: Catalog
    description: BigCommerce Catalog API Definition
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /catalog/products:
    get:
      tags:
        - Catalog
      description: |
        Returns a paginated collection of `Products` objects from the BigCommerce Catalog.
      operationId: getProducts
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterSkuParam"
        - $ref: "#/parameters/FilterPriceParam"
        - $ref: "#/parameters/FilterWeightParam"
        - $ref: "#/parameters/FilterConditionParam"
        - $ref: "#/parameters/FilterBrandIdParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
        - $ref: "#/parameters/FilterDateLastImportedParam"
        - $ref: "#/parameters/FilterIsVisibleParam"
        - $ref: "#/parameters/FilterIsFeaturedParam"
        - $ref: "#/parameters/FilterInventoryLevelParam"
        - $ref: "#/parameters/FilterTotalSoldParam"
        - $ref: "#/parameters/FilterTypeParam"
        - $ref: "#/parameters/FilterCategoriesParam"
        - $ref: "#/parameters/FilterKeywordParam"
        - $ref: "#/parameters/FilterIncludeParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of products and meta data
          schema:
            $ref: "#/definitions/ProductCollectionResponse"
    post:
      tags:
        - Catalog
      description: |
        Creates a `Product` in the BigCommerce Catalog
      operationId: createProduct
      parameters:
        - name: product
          in: body
          required: true
          description: |
            A BigCommerce `Product` object
          schema:
            $ref: "#/definitions/ProductPost"
      responses:
        200:
          description: |
            A product
          schema:
            $ref: "#/definitions/ProductResponse"
        422:
          description: |
            `Product` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            `Product` was in conflict with another product. This is the result of duplicate unique values such as name or SKU; a missing or invalid category id, brand id, or tax_class id; or a conflicting `bulk_pricing_rule`.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Deletes one or more `Product` objects from the BigCommerce Catalog
      operationId: deleteProducts
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterSkuParam"
        - $ref: "#/parameters/FilterPriceParam"
        - $ref: "#/parameters/FilterWeightParam"
        - $ref: "#/parameters/FilterConditionParam"
        - $ref: "#/parameters/FilterBrandIdParam"
        - $ref: "#/parameters/FilterDateModifiedParam"
        - $ref: "#/parameters/FilterDateLastImportedParam"
        - $ref: "#/parameters/FilterIsVisibleParam"
        - $ref: "#/parameters/FilterIsFeaturedParam"
        - $ref: "#/parameters/FilterInventoryLevelParam"
        - $ref: "#/parameters/FilterTotalSoldParam"
        - $ref: "#/parameters/FilterTypeParam"
        - $ref: "#/parameters/FilterCategoriesParam"
        - $ref: "#/parameters/FilterKeywordParam"
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}:
    parameters:
      - $ref: "#/parameters/ProductIdParam"
    get:
      tags:
        - Catalog
      description: |
        Returns a `Product` from the BigCommerce Catalog
      operationId: getProductById
      responses:
        200:
          description: |
            A product
          schema:
            $ref: "#/definitions/ProductResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Catalog
      description: |
        Updates a `Product` in the BigCommerce Catalog
      operationId: updateProduct
      parameters:
        - name: product
          in: body
          required: true
          description: |
            A BigCommerce `Product` object
          schema:
            $ref: "#/definitions/Product"
      responses:
        200:
          description: |
            A product
          schema:
            $ref: "#/definitions/ProductResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            `Product` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            `Product` was in conflict with another product. This is the result of duplicate unique values such as name or SKU, a missing category, brand, or tax_class that the product is being associate to, or a conflicting bulk pricing rule.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Deletes a `Product` object from the BigCommerce Catalog
      operationId: deleteProductById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}/images/:
    parameters:
      - name: product_id
        description: |
          The id of the `Product` the image is being attached to.
        required: true
        in: path
        type: integer
    get:
      tags:
        - Catalog
      description: |
        Gets all images on a product.
      operationId: getProductImages
      responses:
        200:
          description: |
            List of product images and meta
          schema:
            $ref: "#/definitions/ProductImageCollectionResponse"
    post:
      tags:
        - Catalog
      description: |
        Creates an image on a product. Publically accessible URLs and files (form post) are valid parameters.
      operationId: createProductImage
      parameters:
      - name: productImage
        in: body
        required: true
        description: |
          A BigCommerce `ProductImage` object
        schema:
          $ref: "#/definitions/ProductImage"
      responses:
        200:
          description: |
            A product image
          schema:
            $ref: '#/definitions/ProductImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
  /catalog/products/{product_id}/images/{image_id}:
    parameters:
      - name: product_id
        description: |
          The id of the `Product` the image is being attached to.
        required: true
        in: path
        type: integer
      - name: image_id
        description: |
          The id of the `Image` the image is being operated on.
        required: true
        in: path
        type: integer
    get:
      tags:
        - Catalog
      description: |
        Gets image on a product.
      operationId: getProductImageById
      responses:
        200:
          description: |
            An array of product images and meta data
          schema:
            $ref: "#/definitions/ProductImageCollectionResponse"
    put:
      tags:
        - Catalog
      description: |
        Updates an image on a product. Publically accessible URLs and files (form post) are valid parameters.
      operationId: updateProductImage
      parameters:
      - name: productImage
        in: body
        required: true
        description: |
          A BigCommerce `ProductImage` object
        schema:
          $ref: "#/definitions/ProductImage"
      responses:
        200:
          description: |
            A product image
          schema:
            $ref: '#/definitions/ProductImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
        - Catalog
      description: |
        Delete a `ProductImage` in the BigCommerce Catalog
      operationId: deleteProductImage
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}/variants:
    parameters:
      - $ref: "#/parameters/ProductIdParam"
    get:
      tags:
        - Catalog
      description: |
        Returns a `Variant` object list from the BigCommerce Catalog.
      operationId: getVariantsByProductId
      parameters:
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of variants and meta data
          schema:
            $ref: '#/definitions/VariantCollectionResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    post:
      tags:
        - Catalog
      description:
        Create a `Variant` object.
      operationId: createVariant
      parameters:
      - name: Variant
        in: body
        required: true
        description: |
          `Variant` object
        schema:
          $ref: "#/definitions/Variant"
      responses:
        200:
          description: |
            A variant and meta data
          schema:
            $ref: '#/definitions/VariantResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
  /catalog/products/{product_id}/variants/{variant_id}:
    parameters:
      - $ref: "#/parameters/ProductIdParam"
      - name: variant_id
        in: path
        description: |
          The id of the `Variant`.
        required: true
        type: number
        format: int
    get:
      tags:
        - Catalog
      description:
        Get a `Variant` object.
      operationId: getVariantById
      responses:
        200:
          description: |
            A variant and meta data
          schema:
            $ref: '#/definitions/VariantResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Catalog
      description:
        Update a `Variant` object.
      operationId: updateVariant
      parameters:
      - name: Variant
        in: body
        required: true
        description: |
          `Variant` object
        schema:
          $ref: "#/definitions/Variant"
      responses:
        200:
          description: |
            A variant and meta data
          schema:
            $ref: '#/definitions/VariantResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    delete:
      tags:
        - Catalog
      description: |
        Delete a `Variant`
      operationId: deleteVariantById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}/variants/{variant_id}/image:
    post:
      tags:
        - Catalog
      operationId: createVariantImage
      parameters:
        - $ref: "#/parameters/ProductIdParam"
        - name: variant_id
          in: path
          description: |
            The id of the `Variant`.
          required: true
          type: string
          format: url
        - name: image_url
          description: |
            An image file. Support MIME types include GIF, JPEG, and PNG.
          required: true
          in: formData
          type: file
      responses:
        200:
          description: |
            A ResourceImage and meta data
          schema:
            $ref: '#/definitions/ImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            Image was not valid. This is the result of missing image_url field or incorrect file type. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
  /catalog/products/{product_id}/options:
    parameters:
      - $ref: "#/parameters/ProductIdParam"
    get:
      tags:
        - Catalog
      description:
        Get an array of `Option` objects.
      operationId: getOptions
      responses:
        200:
          description: |
            An array of options and meta data
          schema:
            $ref: '#/definitions/OptionCollectionResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    post:
      tags:
        - Catalog
      parameters:
      - name: Option
        in: body
        required: true
        description: |
          `Option` object
        schema:
          $ref: "#/definitions/Option"
      description:
        Create an `Option`.
      operationId: createOption
      responses:
        200:
          description: |
            An option object
          schema:
            $ref: '#/definitions/OptionResponse'
        422:
          description: |
            Option was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            Option was in conflict with another option. This is the result of duplicate unique fields such as name.
          schema:
            $ref: "#/definitions/ErrorResponse"
  /catalog/products/{product_id}/options/{option_id}:
    parameters:
      - name: product_id
        in: path
        description: |
          The id of the `Product` the `Option` belongs to.
        required: true
        type: number
        format: int
      - name: option_id
        description: |
          The id of the `Option`.
        required: true
        in: path
        type: integer
    put:
      tags:
        - Catalog
      description: |
        Update a Product's `Option` based on the product_id and option_id.
      operationId: updateOption
      responses:
        200:
          description: |
            An option object
          schema:
            $ref: '#/definitions/OptionResponse'
        422:
          description: |
            The `Option` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Option` was in conflict with another option. This is the result of duplicate unique fields such as name.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a Product's `Option` based on the product_id and option_id.
      operationId: deleteOptionById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}/modifiers:
    parameters:
      - name: product_id
        in: path
        description: |
          The id of the `Product` the `Modifier` belongs to.
        required: true
        type: number
        format: int
    get:
      tags:
        - Catalog
      description:
        Get an array of `Modifier` objects.
      operationId: getModifiers
      responses:
        200:
          description: |
            An array of modifiers and meta data
          schema:
            $ref: '#/definitions/ModifierCollectionResponse'
    post:
      tags:
        - Catalog
      description:
        Create a `Modifier`.
      operationId: createModifier
      parameters:
        - name: Modifier
          in: body
          required: true
          description: |
            `Modifier` object
          schema:
            $ref: "#/definitions/Modifier"
      responses:
        200:
          description: |
            A modifier object
          schema:
            $ref: '#/definitions/ModifierResponse'
        422:
          description: |
            The `Modifier` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Modifier` was in conflict with another option. This is the result of duplicate unique fields such as name.
          schema:
            $ref: "#/definitions/ErrorResponse"
  /catalog/products/{product_id}/modifiers/{modifier_id}:
    parameters:
      - name: product_id
        in: path
        description: |
          The id of the `Product` the `Modifier` belongs to.
        required: true
        type: number
        format: int
      - name: modifier_id
        description: |
          The id of the `Modifier`
        required: true
        in: path
        type: integer
    get:
      tags:
        - Catalog
      description: |
        Get a `Modifier` by modifier_id
      operationId: getModifierById
      responses:
        200:
          description: |
            A modifier object
          schema:
            $ref: '#/definitions/ModifierResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Catalog
      description: |
        Update an Product's `Modifier` based on the product_id and modifier_id.
      operationId: updateModifier
      responses:
        200:
          description: |
            A modifier object
          schema:
            $ref: '#/definitions/ModifierResponse'
        422:
          description: |
            The `Modifier` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields such as name.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a Product's `Modifier` based on the product_id and modifier_id.
      operationId: deleteModifierById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image:
    parameters:
      - name: product_id
        in: path
        description: |
          The id of the `Product` the `Modifier` belongs to.
        required: true
        type: number
        format: int
      - name: modifier_id
        description: |
          The id of the `Modifier`
        required: true
        in: path
        type: integer
      - name: value_id
        description: |
          The id of the `Modifier`
        required: true
        in: path
        type: integer
    post:
      tags:
        - Catalog
      description: Add an image to a modifier value that will show on the storefront when it’s selected
      operationId: createModifierImage
      parameters:
        - name: image_url
          description: |
            An image url. Support MIME types include GIF, JPEG, and PNG.
          required: true
          in: formData
          type: file
      responses:
        200:
          description: |
            A ResourceImage and meta data
          schema:
            $ref: '#/definitions/ImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            Modifier image was not valid. This is the result of missing image_url fields or non-url for image_url field. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: Delete the image applied to show when the modifier value is selected
      operationId: deleteModifierImage
      responses:
        204:
          description: Image cleared for the modifier value
  /catalog/categories:
    get:
      tags:
        - Catalog
      description: |
        Returns a paginated categories collection from the BigCommerce Catalog
      operationId: getCategories
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterParentIdParam"
        - $ref: "#/parameters/FilterPageTitleParam"
        - $ref: "#/parameters/FilterKeywordParam"
        - $ref: "#/parameters/FilterIsVisibleParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array category objects and meta data
          schema:
            $ref: "#/definitions/CategoryCollectionResponse"
    post:
      tags:
        - Catalog
      description: |
        Creates a `Category` in the BigCommerce Catalog
      operationId: createCategory
      parameters:
        - name: category
          in: body
          required: true
          description: |
            A BigCommerce `Category` object
          schema:
            $ref: "#/definitions/Category"
      responses:
        200:
          description: |
            A category object
          schema:
            $ref: "#/definitions/CategoryResponse"
        422:
          description: |
            The `Category` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Category` was in conflict with another category. This is the result of duplicate unique values such as name or custom_url.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a product or products from the BigCommerce Catalog
      operationId: deleteCategories
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterParentIdParam"
        - $ref: "#/parameters/FilterPageTitleParam"
        - $ref: "#/parameters/FilterKeywordParam"
        - $ref: "#/parameters/FilterIsVisibleParam"
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/categories/{category_id}:
    parameters:
      - name: category_id
        description: |
          The id of the `Category` requested
        required: true
        in: path
        type: integer
    get:
      tags:
        - Catalog
      description: |
        Returns a `Category` from the BigCommerce Catalog
      operationId: getCategoryById
      responses:
        200:
          description: |
            A category object
          schema:
            $ref: "#/definitions/CategoryResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Catalog
      description: |
        Update a `Category` in the BigCommerce Catalog
      operationId: updateCategory
      parameters:
        - name: category
          in: body
          required: true
          description: |
            A BigCommerce `Category` object
          schema:
            $ref: "#/definitions/Category"
      responses:
        200:
          description: |
            A category object
          schema:
            $ref: "#/definitions/CategoryResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            The `Category` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Category` was in conflict with another category. This is the result of duplicate unique values such as name or custom_url.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete one or more `Category` objects from the BigCommerce catalog.
      operationId: deleteCategoryById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/categories/{category_id}/image:
    parameters:
      - name: category_id
        description: |
          The id of the `Category` the image is being attached to.
        required: true
        in: path
        type: integer
    post:
      tags:
        - Catalog
      parameters:
        - name: image_url
          description: |
            An image url. Support MIME types include GIF, JPEG, and PNG.
          required: true
          in: body
          schema:
            $ref: '#/definitions/ResourceImage'
      description: |
        Creates an image on a category. Publically accessible URLs and files (form post) are valid parameters.
      operationId: createCategoryImage
      responses:
        200:
          description: |
            A ResourceImage and meta data
          schema:
            $ref: '#/definitions/ImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            Image was not valid. This is the result of missing image_url field or incorrect file type. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a `Category` image the BigCommerce Catalog
      operationId: deleteCategoryImage
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/categories/tree:
    get:
      tags:
        - Catalog
      description: |
        Returns the categories tree, a nested lineage of the categories with parent->child relationship. The `Category` objects returned are a simplified version of the category objects returned in the rest of this API.
      operationId: getCategoryTree
      responses:
        200:
          description: |
            A array of nested category tree objects and meta data
          schema:
            $ref: "#/definitions/CategoryTreeCollectionResponse"
  /catalog/brands:
    get:
      tags:
        - Catalog
      description:  |
        Gets `Brand` objects.
      operationId: getBrands
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterPageTitleParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of brand objects and meta
          schema:
            $ref: "#/definitions/BrandCollectionResponse"
    post:
      tags:
        - Catalog
      description:
        Create a `Brand` object.
      operationId: createBrand
      parameters:
      - name: Brand
        in: body
        required: true
        description: |
          `Brand` object
        schema:
          $ref: "#/definitions/Brand"
      responses:
        200:
          description: |
            A brand object
          schema:
            $ref: "#/definitions/BrandResponse"
        422:
          description: |
            Brand was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete one or more `Brand` objects from the BigCommerce Catalog
      operationId: deleteBrands
      parameters:
        - $ref: "#/parameters/FilterNameParam"
        - $ref: "#/parameters/FilterPageTitleParam"
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/brands/{brand_id}:
    parameters:
      - name: brand_id
        in: path
        description: |
          The id of the `Brand` requested
        required: true
        type: number
        format: int
    get:
      tags:
        - Catalog
      description:
        Gets `Brand` object.
      operationId: getBrandById
      responses:
        200:
          description: |
            A brand object
          schema:
            $ref: "#/definitions/BrandResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
    put:
      tags:
        - Catalog
      description: |
        Update a `Brand` in the BigCommerce Catalog
      operationId: updateBrand
      parameters:
        - name: brand
          in: body
          required: true
          description: |
            Returns a `Brand` from the BigCommerce Catalog
          schema:
            $ref: "#/definitions/Brand"
      responses:
        200:
          description: |
            A brand object
          schema:
            $ref: "#/definitions/BrandResponse"
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            The `Brand` was not valid. This is the result of missing required fields or invalid data. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
        409:
          description: |
            The `Brand` was in conflict with another product. This is the result of duplicate unique value such as name
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a `Brand` from the BigCommerce Catalog
      operationId: deleteBrandById
      responses:
        204:
          description: |
            An empty response
          schema:
            $ref: '#/definitions/NoContent'
  /catalog/brands/{brand_id}/image:
    parameters:
      - name: brand_id
        description: |
          The id of the `Brand` the image is being attached to.
        required: true
        in: path
        type: integer
    post:
      tags:
        - Catalog
      description: |
        Creates an image on a `Brand`. Publically accessible URLs and files (form post) are valid parameters.
      operationId: createBrandImage
      parameters:
      - name: image_url
        description: |
          An image url. Support MIME types include GIF, JPEG, and PNG.
        required: true
        in: body
        schema:
          $ref: '#/definitions/ResourceImage'
      responses:
        200:
          description: |
            A ResourceImage and meta data
          schema:
            $ref: '#/definitions/ImageResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
        422:
          description: |
            Image was not valid. This is the result of missing image_url field or incorrect file type. See the response for more details.
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Catalog
      description: |
        Delete a `Brand` image the BigCommerce Catalog
      operationId: deleteBrandImage
      responses:
        204:
          description: Image cleared for the brand
  /catalog/products/variants:
    get:
      tags:
        - Catalog
      description: |
        Returns a `Variant` object list from the BigCommerce Catalog.
      operationId: getVariants
      parameters:
        - $ref: "#/parameters/FilterIdParam"
        - $ref: "#/parameters/FilterSkuParam"
        - $ref: "#/parameters/PageParam"
        - $ref: "#/parameters/LimitParam"
      responses:
        200:
          description: |
            An array of variants and meta data
          schema:
            $ref: '#/definitions/VariantCollectionResponse'
        404:
          description: |
            The resource was not found
          schema:
            $ref: '#/definitions/NotFound'
parameters:
  FilterIdParam:
    name: id
    description: |
      Filter items by sku.
    required: false
    in: query
    type: integer
  FilterSkuParam:
    name: sku
    description: |
      Filter items by sku.
    required: false
    in: query
    type: string
  FilterNameParam:
    name: name
    description: |
      Filter items by name.
    required: false
    in: query
    type: string
  FilterPriceParam:
    name: price
    description: |
      Filter items by price.
    required: false
    in: query
    type: number
  FilterWeightParam:
    name: weight
    description: |
      Filter items by weight.
    required: false
    in: query
    type: number
  FilterConditionParam:
    name: condition
    description: |
      Filter items by condition.
    required: false
    in: query
    type: integer
  FilterBrandIdParam:
    name: brand_id
    description: |
      Filter items by brand_id.
    required: false
    in: query
    type: integer
  FilterDateModifiedParam:
    name: date_modified
    description: |
      Filter items by date_modified.
    required: false
    in: query
    type: integer
  FilterDateLastImportedParam:
    name: date_last_imported
    description: |
      Filter items by date_last_imported.
    required: false
    in: query
    type: integer
  FilterIsVisibleParam:
    name: is_visible
    description: |
      Filter items by is_visible.
    required: false
    in: query
    type: integer
  FilterIsFeaturedParam:
    name: is_featured
    description: |
      Filter items by is_featured.
    required: false
    in: query
    type: integer
  FilterInventoryLevelParam:
    name: inventory_level
    description: |
      Filter items by inventory_level.
    required: false
    in: query
    type: integer
  FilterTotalSoldParam:
    name: total_sold
    description: |
      Filter items by total_sold.
    required: false
    in: query
    type: integer
  FilterTypeParam:
    name: type
    description: |
      Filter items by type.
    required: false
    in: query
    type: integer
  FilterCategoriesParam:
    name: categories
    description: |
      Filter items by categories.
    required: false
    in: query
    type: integer
  FilterKeywordParam:
    name: keyword
    description: |
      Filter items by keywords found in the name or page_title.
    required: false
    in: query
    type: integer
  FilterIncludeParam:
    name: include
    description: |
      Include sub-resources on a product with a comma separated list. Valid expansions currently include `variants`, `images`, `custom_fields`, and `bulk_pricing_rules`.
    required: false
    in: query
    type: string
  FilterParentIdParam:
    name: parent_id
    description: |
      Filter items by parent_id.
    required: false
    in: query
    type: integer
  FilterPageTitleParam:
    name: page_title
    description: |
      Filter items by page_title.
    required: false
    in: query
    type: string
  PageParam:
    name: page
    description: |
      Control the page in a limited list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: |
      Control the items per page.
    required: false
    in: query
    type: integer
  ProductIdParam:
    name: product_id
    in: path
    description: |
      The id of the `Product` the `Variant` belongs to.
    required: true
    type: number
    format: int
definitions:
  ModifierCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Modifier"
      meta:
        $ref: "#/definitions/CollectionMeta"
  ModifierResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/Modifier"
      meta:
        $ref: "#/definitions/CollectionMeta"
  OptionCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Option"
      meta:
        $ref: "#/definitions/CollectionMeta"
  OptionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/Option"
      meta:
        $ref: "#/definitions/CollectionMeta"
  CategoryTreeCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/CategoryNode"
      meta:
        $ref: "#/definitions/CollectionMeta"
  CategoryCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Category"
      meta:
        $ref: "#/definitions/CollectionMeta"
  CategoryResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/Category"
      meta:
        $ref: "#/definitions/Meta"
  BrandCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Brand"
      meta:
        $ref: "#/definitions/CollectionMeta"
  BrandResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/Brand"
      meta:
        $ref: "#/definitions/Meta"
  VariantResponse:
    description: |
      Successful response
    type: object
    properties:
      data:
        $ref: '#/definitions/Variant'
      meta:
        $ref: '#/definitions/Meta'
  ProductImageCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/ProductImage"
      meta:
        $ref: "#/definitions/CollectionMeta"
  VariantCollectionResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Variant"
      meta:
        $ref: "#/definitions/CollectionMeta"
  ProductImageResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/ProductImage"
      meta:
        $ref: "#/definitions/CollectionMeta"
  ImageResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/ResourceImage"
      meta:
        $ref: "#/definitions/Meta"
  NotFound:
    description: |
      Error payload for the BigCommerce API
    type: object
    properties:
      status:
        description: |
          404 HTTP status code
        type: integer
      title:
        description: The error title describing the particular
        type: string
      type:
        type: string
      instance:
        type: string
  NoContent:
    description: |
      No content on successful deletion
  ProductResponse:
    description: |
      Response payload for the Bigcommerce API
    type: object
    properties:
      data:
        $ref: "#/definitions/Product"
      meta:
        $ref: "#/definitions/Meta"
  ProductCollectionResponse:
    type: object
    description: |
      Response payload for the Bigcommerce API
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Product"
      meta:
        $ref: "#/definitions/CollectionMeta"
  ErrorResponse:
    allOf:
    - $ref: "#/definitions/BaseError"
    - type: object
      properties:
        errors:
          $ref: "#/definitions/DetailedErrors"
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API
    properties:
      status:
        description: |
          The HTTP status code
        type: integer
      title:
        description: |
          The error title describing the particular
        type: string
      type:
        type: string
      instance:
        type: string
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
  CollectionMeta:
    type: object
    description: |
      Data about the response including pagination and collection totals
    properties:
      total:
        type: integer
        description: |
          Total number of items return in the result set
      count:
        type: integer
        description: |
          Total number of items in the collection
      per_page:
        type: integer
        description: |
          The amount of items returned in the collection per page, controlled by the limit parameter
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection
      links:
        type: object
        description: |
          Pagination links for the previous and next parts of the whole collection
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response
          current:
            type: string
            description: |
              Link to the current page returned in the response
          next:
            type: string
            description: |
              Link to the next page returned in the response
  Meta:
    type: object
    description: Empty meta object, may be used later
  Product:
    type: object
    description: |
      A BigCommerce Product object describes a single or collection of purchasable units.
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the product, increments sequentially.
      name:
        type: string
        description: |
          The product name.
      type:
        type: string
        description: |
          The product type: physical - a physical stock unit, digital - a digital download
        enum:
          - physical
          - digital
      sku:
        type: string
        description: |
          User defined product code/stock keeping unit (SKU).
      description:
        type: string
        description: |
          The product description which can include HTML formatting.
      weight:
        type: number
        format: double
        description: |
          Weight of the product used which can be used when calculating shipping costs.
      width:
        type: number
        format: double
        description: |
          Width of the product used which can be used when calculating shipping costs.
      depth:
        type: number
        format: double
        description: |
          Depth of the product used which can be used when calculating shipping costs.
      height:
        type: number
        format: double
        description: |
          Height of the product used which can be used when calculating shipping costs.
      price:
        type: number
        format: double
        description: |
          The price of the product, the price should include or exclude tax based on the store settings.
      cost_price:
        type: number
        format: double
        description: |
          he cost price of the product, stored for reference only, it is not used or displayed anywhere on the store.
      retail_price:
        type: number
        format: double
        description: |
          The retail cost of the product, if entered the retail cost price will be shown on the product page.
      sale_price:
        type: number
        format: double
        description: |
          The sale price will be used instead of value in the price field when calculating the products cost if entered.
      tax_class_id:
        type: integer
        description: |
          The ID of the tax class applied to the product. NOTE: Value ignored if automatic tax is enabled.
      product_tax_code:
        type: string
        description: |
          Accepts AvaTax system codes that identify products and services that fall into special sales tax categories. Allows merchants that subscribe to Avalara Premium to achieve increased accuracy in sales tax calculations. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. Refer to the 'AvaTax System tax codes' section of the following page for further information and the full list of codes: https://help.avalara.com/000_AvaTax_Calc/000AvaTaxCalc_User_Guide/040_Managing_Tax_Profiles/050_Tax_Codes/001_What_is_a_Tax_Code
      calculated_price:
        type: number
        format: double
        description: |
          The price of the product unless a sale_price is set.
      categories:
        type: array
        description: |
          An array of IDs for the categories this product belongs to. When updating a product, if an array of categories is supplied all product categories will be overwritten. Does not accept more than 1,000 ID values.
        items:
          type: integer
      brand_id:
        type: integer
        description: |
          The id associated with the product's brand.
      inventory_level:
        type: integer
        description: |
          Current inventory level of the product. Simple inventory tracking must be enabled (See the inventory_tracking field) for this to take any effect.
      inventory_warning_level:
        type: integer
        description: |
          Inventory Warning level for the product. When the products inventory level drops below the warning level the store owner will be informed. Simple inventory tracking must be enabled (See the inventory_tracking field) for this to take any effect.
      inventory_tracking:
        type: string
        description: |
          The type of inventory tracking for the product: none - inventory levels will not be tracked. product - inventory levels will be tracked using the 'inventory_level' and 'inventory_warning_level' fields. variant - inventory levels will be tracked based on  variants which maintain their own warning levels and inventory levels.
        enum:
          - none
          - product
          - variant
      fixed_cost_shipping_price:
        type: integer
        description: |
          A fixed shipping cost for the product, if defined the value will be used during checkout instead of normal shipping cost calculation.
      is_free_shipping:
        type: boolean
        description: |
          Flag used to indicate if the product has free shipping or not. If true the shipping cost for the product will be zero.
      is_visible:
        type: boolean
        description: |
          Flag to determine if the product should be displayed to customers browsing the store or not. If true the product will be displayed, false the product will be hidden from view.
      is_featured:
        type: boolean
        description: |
          Flag to determine if the product should be included in 'featured products' panel when viewing the store.
      warranty:
        type: string
        description: |
          Warranty information displayed on the product page which can include HTML formatting.
      bin_picking_number:
        type: string
        description: |
          The BIN picking number for the product.
      layout_file:
        type: string
        description: |
          The layout template file used to render this product.
      upc:
        type: string
        description: |
          The product UPC code which is used in feeds for shopping comparison sites and external channel integrations.
      search_keywords:
        type: string
        description: |
          A comma separated list of keywords that can be used to locate the product when searching the store.
      availability:
        type: string
        enum:
          - available
          - disabled
          - preorder
        description: |
          Availability of the product. availability options: available - The product can be purchased in the store front. disabled - The product is listed in the store front but can not be purchased. preorder - The product is listed for pre-orders.
      availability_description:
        type: string
        description: |
          Availability text displayed on the checkout page under the product title telling the customer how long it will normally take to ship this product, such as 'Usually ships in 24 hours'.
      gift_wrapping_options:
        type: integer
        description: |
          A list of gift wrapping option ids, 0 (allow any gift wrapping options in the store), or -1 to disallow gift wrapping on the product.
      sort_order:
        type: integer
        description: |
          Priority this product will be given when included in product lists on category pages and search results. The lower the number, the closer to the top of the results the product will be.
      condition:
        type: string
        description: |
          The product condition, will be shown on the product page if the value of the 'is_condition_shown' field is true. Possible values: New, Used, Refurbished
      is_condition_shown:
        type: boolean
        description: |
          Flag used to determine if the product condition is shown to the customer on the product page.
      order_quantity_minimum:
        type: integer
        description: |
          The minimum quantity an order has to contain to be able to purchase this product.
      order_quantity_maximum:
        type: integer
        description: |
          The maximum quantity an order can contain when purchasing the product.
      page_title:
        type: string
        description: |
          Custom title for the products page, if not defined the product name will be used as the meta title.
      meta_keywords:
        type: array
        description: |
          Custom meta keywords for the product page, if not defined the store default keywords will be used.
        items:
          type: string
      meta_description:
        type: string
        description: |
          Custom meta description for the product page, if not defined the store default meta description will be used.
      date_created:
        type: string
        format: data-time
        description: |
          The date of which the product was created.
      date_modified:
        type: string
        format: data-time
        description: |
          The date of which the product was created.
      view_count:
        type: integer
        description: |
          The number of times the product has been viewed.
      preorder_release_date:
        type: string
        format: data-time
        description: |
          Pre-order release date. See availability field for details on setting a products availability to accept pre-orders.
      preorder_message:
        type: string
        description: |
          Custom expected date message to display on the product page, if undefined the message defaults to the store wide setting. Can contain the %%DATE%% place holder which will be substituted for the release date
      is_preorder_only:
        type: boolean
        description: |
          If set to false, the product will not change its availability from preorder to available on the release date. Otherwise on the release date the products availability/status will change to available.
      is_price_hidden:
        type: boolean
        description: |
          False by default, which indicates that the price of this product should be shown on the product page. If set to 'true', the price is hidden. NOTE: To successfully set 'is_price_hidden' to 'true', the 'availability' value must be 'disabled'.
      price_hidden_label:
        type: string
        description: |
          By default, an empty string. If 'is_price_hidden' is 'true', the value of 'price_hidden_label' is displayed instead of the price. NOTE: To successfully set a non-empty string value for 'is_price_hidden' to 'true', the 'availability' value must be 'disabled'.
      images:
        type: array
        items:
          $ref: "#/definitions/ProductImage"
      custom_fields:
        type: array
        items:
          $ref: "#/definitions/CustomField"
      custom_url:
        $ref: "#/definitions/CustomUrl"
      bulk_pricing_rules:
        type: array
        items:
          $ref: "#/definitions/BulkPricingRule"
      variants:
        type: array
        items:
          $ref: "#/definitions/Variant"
  ProductPost:
    allOf:
      - $ref: "#/definitions/Product"
      - properties:
          variants:
            type: array
            items:
              $ref: "#/definitions/VariantPost"
  ProductImage:
    type: object
    description: |
      An product image model.
    properties:
      id:
        description: |
          The unique numerical ID of the image, increments sequentially
        type: integer
      product_id:
        description: |
          The unique numerical identifier for the product that the image is associated with.
        type: integer
      is_thumbnail:
        description: |
          Flag for identifying if the image is used as the product's thumbnail.
        type: boolean
      sort_order:
        description: |
          The order in which the image will be displayed on the product page. When updating if the image is given a lower priority, all image with a sort_order the same or greater than the images new sort_order value will have their sort_order reordered
        type: integer
      description:
        description: |
          The description for the image.
        type: string
      image_url:
        description: |
          Url of the original image file uploaded to BigCommerce. Must be POSTed into as a multipart/form-data field.
        type: string
      url_zoom:
        description: |
          The zoom url for this image.
        type: string
      url_standard:
        description: |
          The standard url for this image.
        type: string
      url_thumbnail:
        description: |
          Url of the thumbnail for this image.
        type: string
      url_tiny:
        description: |
          The tiny url for this image.
        type: string
  CustomField:
    type: object
    description: |
      Gets custom fields associated with a product, which allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.
    properties:
      id:
        description: |
          The unique numerical ID of the custom field, increments sequentially
        type: integer
      name:
        description: |
          The name of the field shown on the store front, orders, etc..
        type: string
      value:
        description: |
          The values or text of the field shown on the store front, orders, etc..
        type: string
  CustomUrl:
    type: object
    description: |
      The custom url for the product on the store front.
    properties:
      url:
        type: string
        description: |
          Product url on the store front.
      is_customized:
        type: boolean
        description: |
          Returns true if the url has been changed from it's default state (the auto-assigned url BigCommerce provides)
  BulkPricingRule:
    type: object
    description: |
      Rules that offer price discounts based on quantity breaks.
    properties:
      id:
        type: integer
        description: |
          The ID of the bulk pricing rule.
      quantity_min:
        type: integer
        description: |
          The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the min value, unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.
      quantity_max:
        type: integer
        description: |
          The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.
      type:
        type: string
        enum:
          - price
          - percent
          - fixed
        description: |
          The type of adjument that is made, 'price' - The adjument amount per product, 'percent' - The adjustment as a percent of the original price, 'fixed' - the adjusted absolute price of the product.
      amount:
        type: integer
        description: |
          The value of the adjusted by the bulk pricing rule.
  Variant:
    type: object
    properties:
      id:
        type: integer
      product_id:
        type: integer
      sku:
        type: string
      sku_id:
        type: integer
        x-nullable: true
        description: read-only reference to V2 sku id, null if it's a base variant
      cost_price:
        type: number
        format: double
        description: The cost price of the variant.
      price:
        type: number
        format: double
        x-nullable: true
        description: This variant's base price on the storefront. If this value is null, the product's default price (set in the Product resource's price field) will be used as the base price.
      weight:
        type: number
        format: double
        x-nullable: true
        description: This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.
      purchasing_disabled:
        type: boolean
        description: If true, this variant will not be purchasable on the storefront
      purchasing_disabled_message:
        type: string
        description: If purchasing_disabled is true, this message should show on the storefront when the variant is selected
      image_url:
        type: string
        description: The image that will be displayed when this variant is selected on the storefront. When updating a SKU image, send the publicly accessible URL. Supported image formats are JPEG, PNG, and GIF. Generic product images not specific to the variant should be stored on the product.
      upc:
        type: string
        description: The UPC code which is used in feeds for shopping comparison sites and external channel integrations.
      inventory_level:
        type: integer
        description: Inventory level for the variant, which is used when the product's inventory_tracking is set to variant
      inventory_warning_level:
        type: integer
        description: When the variant hits this inventory level it is considered low stock
      bin_picking_number:
        type: string
        description: Identifies where in a warehouse the variant is located.
      option_values:
        type: array
        items:
          $ref: '#/definitions/OptionValueShort'
        description: Array of option and option values ids that make up this variant. Will be empty if the variant is the product's base variant.
  VariantPost:
    type: object
    properties:
      id:
        type: integer
      product_id:
        type: integer
      sku:
        type: string
      sku_id:
        type: integer
        x-nullable: true
        description: read-only reference to V2 sku id, null if it's a base variant
      price:
        type: string
        x-nullable: true
        description: This variant's base price on the storefront. If this value is null, the product's default price (set in the Product resource's price field) will be used as the base price.
      weight:
        type: string
        x-nullable: true
        description: This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.
      purchasing_disabled:
        type: boolean
        description: If true, this variant will not be purchasable on the storefront
      purchasing_disabled_message:
        type: string
        description: If purchasing_disabled is true, this message should show on the storefront when the variant is selected
      image_url:
        type: string
        description: The image that will be displayed when this variant is selected on the storefront. When updating a SKU image, send the publicly accessible URL. Supported image formats are JPEG, PNG, and GIF. Generic product images not specific to the variant should be stored on the product.
      cost_price:
        type: string
        description: The variant's cost price
      upc:
        type: string
        description: The UPC code which is used in feeds for shopping comparison sites and external channel integrations
      inventory_level:
        type: integer
        description: Inventory level for the variant, which is used when the product's inventory_tracking is set to variant
      inventory_warning_level:
        type: integer
        description: When the variant hits this inventory level it is considered low stock
      bin_picking_number:
        type: string
        description: Identifies where in a warehouse the variant is located.
      option_values:
        type: array
        items:
          $ref: '#/definitions/OptionValueShortPost'
  OptionValueShortPost:
    type: object
    properties:
      option_display_name:
        type: string
        description: |
          The name of the option to be created on POST
      label:
        type: string
        description: |
          The label of the option value to be created on POST
  OptionValueShort:
    type: object
    properties:
      id:
        type: integer
      option_id:
        type: integer
  CategoryNode:
    type: object
    description: |
      A BigCommerce category node object. Used to reflect parent <> child category relationships.
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the category, increments sequentially.
      parent_id:
        type: integer
        description: |
          The unique numerical ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
      name:
        type: string
        description: |
          The name displayed for the category. Name is unique to the category's siblings.
      is_visible:
        type: boolean
        description: |
          Flag to determine if the product should be displayed to customers browsing the store or not. If true the category will be displayed, false the category will be hidden from view.
      url:
        type: string
        description: |
          The custom url for the category on the store front.
      children:
        type: array
        description: |
          The list of children of the category.
        items:
          $ref: "#/definitions/CategoryNode"
  Category:
    type: object
    description: |
      A BigCommerce category object.
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the category, increments sequentially.
      parent_id:
        type: integer
        description: |
          The unique numerical ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.
      name:
        type: string
        description: |
          The name displayed for the category. Name is unique to the category's siblings.
      description:
        type: string
        description: |
          The product description which can include HTML formatting.
      views:
        type: integer
        description: |
          Number of views the category has on the storefront
      sort_order:
        type: integer
        description: |
          Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.
      page_title:
        type: string
        description: |
          Custom title for the category page, if not defined the category name will be used as the meta title.
      meta_keywords:
        type: array
        description: |
          Custom meta keywords for the category page, if not defined the store default keywords will be used. Must post as an array like: ["awesome","sauce"]
        items:
          type: string
      meta_description:
        type: string
        description: |
          Custom meta description for the category page, if not defined the store default meta description will be used.
      layout_file:
        type: string
        description: |
          The layout template file used to render this category.
      image_url:
        type: string
        description: |
          URL of the image url for this category used on the storefront. Images can be uploaded via form file post to /categories/{categoryId}/image or by providing publicly accessible URL to this field.
      is_visible:
        type: boolean
        description: |
          Flag to determine if the product should be displayed to customers browsing the store or not. If true the category will be displayed, false the category will be hidden from view.
      search_keywords:
        type: string
        description: |
          A comma separated list of keywords that can be used to locate the category when searching the store.
      default_product_sort:
        type: string
        description: |
          Determines how the products are sorted on category page load.
        enum:
          - use_store_settings
          - featured
          - newest
          - best_selling
          - alpha_asc
          - alpha_desc
          - avg_customer_review
          - price_asc
          - price_desc
      custom_url:
        $ref: "#/definitions/CustomUrl"
  ResourceImage:
    type: object
    description: |
      An object containing a publically accessible image URL or a form post that contains an image file.
    properties:
      image_url:
        type: string
        description: |
          A public URL for a GIF, JPEG, or PNG image.
  Brand:
    type: object
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the brand, increments sequentially.
      name:
        type: string
        description: |
          The name of the brand. Must be unique
      page_title:
        type: string
        description: |
          The title shown in the browser while viewing the brand
      meta_keywords:
        type: array
        items:
          type: string
        description: |
          Comma separated list of meta keywords to include in the HTML
      meta_description:
        type: string
        description: |
          A meta description to include
      search_keywords:
        type: string
        description: |
          A comma separated list of keywords that can be used to locate this brand
      image_url:
        type: string
        description: |
          URL of the image url for this category used on the storefront. Images can be uploaded via form file post to /brannds/{brandId}/image or by providing publicly accessible URL to this field.
  Option:
    type: object
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the option, increments sequentially.
      product_id:
        type: integer
        description: |
          The unique numerical ID of the product that the option belongs to.
      name:
        type: string
        description: |
          The name unique option name auto-generated from the display name, a timestamp, and the product id.
      display_name:
        type: string
        description: |
          The name of the option shown on the store front.
      type:
        $ref: "#/definitions/OptionType"
      config:
        $ref: "#/definitions/OptionConfig"
      values:
        type: array
        items:
          $ref: "#/definitions/OptionValue"
  OptionType:
    type: string
    description: |
      The type of option, which determines how it will display on the storefront. For reference, former v2 API values:
      RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch
    enum:
      - radio_buttons
      - rectangles
      - dropdown
      - product_list
      - product_list_with_images
      - swatch
  OptionConfig:
    type: object
    properties:
      default_value:
        type: string
        description: |
          (date, text, multi_line_text, numbers_only_text) The default value shown on a date option as an ISO-8601 formatted string or text option as a string.
      checked_by_default:
        type: boolean
        description: |
          (checkbox) Flag for setting the check box to be checked by default.
      checkbox_label:
        type: string
        description: |
          (checkbox) Label displayed for the checkbox option.
      date_limited:
        type: boolean
        description: |
          (date) Flag to limit the date allowed to be entered on a date option.
      date_limit_mode:
        type: string
        description: |
          (date) The type of limit that is allowed to be entered on a date option (`earliest`, `range`, `latest`).
        enum:
          - earliest
          - range
          - latest
      date_earliest_value:
        type: string
        format: date
        description: |
          (date) The earliest date allowed to be entered on the date option as an ISO-8601 formatted string.
      date_latest_value:
        type: string
        format: date
        description: |
          (date) The latest date allowed to be entered on the date option as an ISO-8601 formatted string.
      file_types_mode:
        type: string
        description: |
          (file) The kind of restriction on the type of files that can be uploaded to a file upload option.
            `specific` - restricts upload to particular file types.
            `all` - allows all files types.
        enum:
          - specific
          - all
      file_types_supported:
        type: array
        description: |
          (file) The kind of files allowed to be uploaded if the `file_type_option` is set to `specific`.
            `images` - Allows upload of image MIME types (`bmp`,`gif`,`jpg`,`jpeg`,`jpe`,`jif`,`jfif`,`jfi`,`png`,`wbmp`,`xbm`,`tiff`).
            `documents` - Allows upload of document MIME types (`txt`,`pdf`,`rtf`,`doc`,`docx`,`xls`,`xlsx`,`accdb`,`mdb`,`one`,`pps`,`ppsx`,`ppt`,`pptx`,`pub`,`odt`,`ods`,`odp`,`odg`,`odf`).
            `other` - Allows other file type defined in the `file_types_other` array.
        items:
          type: string
      file_types_other:
        type: array
        description: |
          (file) A list of other files types allowed with the file upload option.
        items:
          type: string
      file_max_size:
        type: integer
        description: |
         (file) The maximum size of the file that can be used in the file upload option.
      text_characters_limited:
        type: boolean
        description: |
          (text, multi_line_text) Flag to validate the length of the text of a text or multi-line text input.
      text_min_length:
        type: integer
        description: |
          (text, multi_line_text) The minimum length allowed for a text or multi-line text option.
      text_max_length:
        type: integer
        description: |
          (text, multi_line_text) The maximum length allowed for a text or multi line text option.
      text_lines_limited:
        type: boolean
        description: |
          (multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.
      text_max_lines:
        type: integer
        description: |
          (multi_line_text) The maximum number of lines allowed on a multi-line text input.
      number_limited:
        type: boolean
        description: |
          (numbers_only_text) Flag to limit the value of a number option.
      number_limit_mode:
        type: string
        description: |
          (numbers_only_text) The type of limit that is allowed to be entered on a number option (`lowest`, `highest`, `range`).
        enum:
          - lowest
          - highest
          - range
      number_lowest_value:
        type: number
        description: |
          (numbers_only_text) The lowest allowed value for a number option if `limit_input` is true.
      number_highest_value:
        type: number
        description: |
          (numbers_only_text) The highest allowed value for a number option if `limit_input` is true.
      number_integers_only:
        type: boolean
        description: |
          (numbers_only_text) Flag to limit the imput on a number option to only accept whole numbers.
      product_list_adjusts_inventory:
        type: boolean
        description: |
          (product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.
      product_list_adjusts_pricing:
        type: boolean
        description: |
          (product_list, product_list_with_images) Flag to add the price of the optional product to the price of the main product
      product_list_shipping_calc:
        type: string
        description: |
          (product_list, product_list_with_images)  How to factor the optional product's weight and dimensions (package) into the shipping quote (none - don't adjust, weight - use shipping weight only, package - use package, weight and dimensions)
        enum:
          - none
          - weight
          - package
  Modifier:
    type: object
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the modifier, increments sequentially.
      product_id:
        type: integer
        description: |
          The unique numerical ID of the product that the option belongs to.
      name:
        type: string
        description: |
          The name unique option name auto-generated from the display name, a timestamp, and the product id.
      display_name:
        type: string
        description: |
          The name of the option shown on the store front.
      type:
        $ref: "#/definitions/ModifierType"
      required:
        type: boolean
        description: |
          Whether this modifer is required or not at checkout
      config:
        $ref: "#/definitions/OptionConfig"
      values:
        type: array
        items:
          $ref: "#/definitions/ModifierValue"
  ModifierType:
    type: string
    description: |
      The type of modifier, which determines how it will display on the storefront. For reference, former v2 API values:
      D = date, C = checkbox, F = file, T = text, MT = multi_line_text, N = numbers_only_text, RB = radio_buttons,
      RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch
    enum:
      - date
      - checkbox
      - file
      - text
      - multi_line_text
      - numbers_only_text
      - radio_buttons
      - rectangles
      - dropdown
      - product_list
      - product_list_with_images
      - swatch
  OptionValue:
    type: object
    properties:
      id:
        type: integer
        description: |
          The unique numerical ID of the value, increments sequentially.
      is_default:
        type: boolean
        description: |
          The flag for preselecting a value as the default on the store front. This field is not supported for swatch options/modifiers.
      label:
        type: string
        description: |
          The text display identifying the value on the store front.
      sort_order:
        type: integer
        description: |
          The order in which the value will be displayed on the product page.
      value_data:
        type: object
        description: |
          Extra data describing the value based on the type of option or modifier that the value is associated with swatch requires an array of colors with up to three hexidecimal color keys, product list requires a `product_id`, and checkbox requires boolean flag called `checked_value` to determine which value is considered to be the checked state.
  ModifierValue:
    type: object
    allOf:
      - $ref: '#/definitions/OptionValue'
      - type: object
        properties:
          adjusters:
            type: object
            properties:
              price:
                $ref: '#/definitions/Adjuster'
              weight:
                $ref: '#/definitions/Adjuster'
              image_url:
                type: string
                description: |
                  The url for an image displayed on the storefront when the modifier value is selected.
              purchasing_disabled:
                type: object
                properties:
                  status:
                    type: boolean
                    description: |
                      Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.
                  message:
                    type: string
                    description: |
                      The message displayed on the storefront when the purchasing disabled status is `true`.
  Adjuster:
    type: object
    properties:
      adjuster:
        type: string
        description: |
          The type of adjuster as either `relative` or `percentage` for either the price or the weight of the variant when the modifier value is selected on the storefront.
        enum:
          - relative
          - percentage
      adjuster_value:
        type: number
        description: |
          The numeric amount the adjuster will change either the price or the weight of the variant when the modifier value is selected on the storefront.
